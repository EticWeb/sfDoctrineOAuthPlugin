<?php

/**
 * PluginToken
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginToken extends BaseToken
{
  const STATUS_ACCESS = 0;
  const STATUS_REQUEST = 1;

  public function toOAuthToken()
  {
    return new OAuthToken($this->getTokenKey(), $this->getTokenSecret());
  }

  public function isValidToken()
  {
    $key = $this->getTokenKey();

    $valid = $this->getStatus() == self::STATUS_ACCESS && !empty($key) && !$this->isExpired();


    if($this->getOauthVersion() == 1 && $valid)
    {
      $secret = $this->getTokenSecret();

      $valid = !empty($secret);
    }

    return $valid;
  }

  public function isExpired()
  {
    return !is_null($this->getExpire()) && $this->getExpire() < time();
  }

  public function refreshToken()
  {
    sfOAuth::refresh($this);
  }

  public function getParams()
  {
    $params = $this->_get('params');

    return (array) json_decode($params);
  }

  public function getParam($key, $default = null)
  {
    $params = $this->getParams();

    return isset($params[$key])?$params[$key]:$default;
  }

  public function setParams($params)
  {
    $this->_set('params', json_encode($params), false);
  }

  public function setParam($key, $value)
  {
    $params = $this->getParams();
    $params[$key] = $value;

    $this->setParams($params);
  }
}